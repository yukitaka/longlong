// Code generated by MockGen. DO NOT EDIT.
// Source: individuals.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/yukitaka/longlong/internal/domain/entity"
)

// MockIndividuals is a mock of Individuals interface.
type MockIndividuals struct {
	ctrl     *gomock.Controller
	recorder *MockIndividualsMockRecorder
}

// MockIndividualsMockRecorder is the mock recorder for MockIndividuals.
type MockIndividualsMockRecorder struct {
	mock *MockIndividuals
}

// NewMockIndividuals creates a new mock instance.
func NewMockIndividuals(ctrl *gomock.Controller) *MockIndividuals {
	mock := &MockIndividuals{ctrl: ctrl}
	mock.recorder = &MockIndividualsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndividuals) EXPECT() *MockIndividualsMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockIndividuals) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockIndividualsMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockIndividuals)(nil).Close))
}

// Create mocks base method.
func (m *MockIndividuals) Create(name string, userId, profileId int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", name, userId, profileId)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIndividualsMockRecorder) Create(name, userId, profileId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIndividuals)(nil).Create), name, userId, profileId)
}

// Find mocks base method.
func (m *MockIndividuals) Find(id int64) (*entity.Individual, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", id)
	ret0, _ := ret[0].(*entity.Individual)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockIndividualsMockRecorder) Find(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockIndividuals)(nil).Find), id)
}
