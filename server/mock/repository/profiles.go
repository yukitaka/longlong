// Code generated by MockGen. DO NOT EDIT.
// Source: profiles.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/yukitaka/longlong/internal/domain/entity"
)

// MockProfiles is a mock of Profiles interface.
type MockProfiles struct {
	ctrl     *gomock.Controller
	recorder *MockProfilesMockRecorder
}

// MockProfilesMockRecorder is the mock recorder for MockProfiles.
type MockProfilesMockRecorder struct {
	mock *MockProfiles
}

// NewMockProfiles creates a new mock instance.
func NewMockProfiles(ctrl *gomock.Controller) *MockProfiles {
	mock := &MockProfiles{ctrl: ctrl}
	mock.recorder = &MockProfilesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfiles) EXPECT() *MockProfilesMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockProfiles) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockProfilesMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockProfiles)(nil).Close))
}

// Create mocks base method.
func (m *MockProfiles) Create(nickName, fullName, bio string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", nickName, fullName, bio)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockProfilesMockRecorder) Create(nickName, fullName, bio interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockProfiles)(nil).Create), nickName, fullName, bio)
}

// Find mocks base method.
func (m *MockProfiles) Find(id int) (*entity.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", id)
	ret0, _ := ret[0].(*entity.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockProfilesMockRecorder) Find(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockProfiles)(nil).Find), id)
}
